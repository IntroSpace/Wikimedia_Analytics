# Версия синтаксиса Docker Compose
version: '3.8'

# Определяем все сервисы (контейнеры)
services:
  # Zookeeper - это обязательный помощник для Kafka.
  # Он управляет состоянием кластера Kafka (кто главный, какие топики есть и т.д.).
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Наш брокер сообщений Kafka.
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    # Запускаем Kafka только после того, как запустится Zookeeper.
    depends_on:
      - zookeeper
    ports:
      # Пробрасываем порт 9092 из контейнера наружу, чтобы Python-скрипты могли к нему подключиться.
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # Адрес, по которому другие сервисы (и мы) будут обращаться к Kafka.
      # PLAINTEXT://kafka:29092 - для общения внутри Docker-сети.
      # PLAINTEXT_HOST://localhost:9092 - для общения с нашими скриптами с нашего компьютера.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Быстрая база данных для хранения счетчиков.
  redis:
    image: redis:latest
    container_name: redis
    ports:
      # Пробрасываем стандартный порт Redis 6379.
      - "6379:6379"

